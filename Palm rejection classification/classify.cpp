/* This file is automatically generated by convert_j48.py */

#include "features.h"

#include <math.h>

#define CLASS(x) TOUCH_KIND_##x
#define RETURN_CLASS(x) do { DEBUG("%s at line %d", #x, __LINE__); return CLASS(x); } while(0)

int classify_1000(const struct features *features) {
    if((features->window_features_900.major_axis.mean) <= 6.39999) {
        if((features->window_features_1000.accel.std) <= 0.000516) {
            if((features->window_features_1000.dist.std) <= 61.713456) { RETURN_CLASS(POINTER); /* (41.0/3.0) */ }
            if((features->window_features_1000.dist.std) > 61.713456) {
                if((features->window_features_800.dist.min) <= 180.825883) { RETURN_CLASS(PALM); /* (204.0) */ }
                if((features->window_features_800.dist.min) > 180.825883) { RETURN_CLASS(POINTER); /* (13.0) */ }
            }
        }
        if((features->window_features_1000.accel.std) > 0.000516) {
            if((features->window_features_1000.major_axis.std) <= 0.3154) {
                if((features->window_features_1000.dist.min) <= 83.216585) {
                    if((features->window_features_50.num_other_events) <= 1) { RETURN_CLASS(POINTER); /* (129.0) */ }
                    if((features->window_features_50.num_other_events) > 1) { RETURN_CLASS(PALM); /* (55.0) */ }
                }
                if((features->window_features_1000.dist.min) > 83.216585) { RETURN_CLASS(POINTER); /* (1297.0/3.0) */ }
            }
            if((features->window_features_1000.major_axis.std) > 0.3154) {
                if((features->window_features_100.dist.mean) <= 401.72607) { RETURN_CLASS(PALM); /* (25.0/1.0) */ }
                if((features->window_features_100.dist.mean) > 401.72607) { RETURN_CLASS(POINTER); /* (7.0) */ }
            }
        }
    }
    if((features->window_features_900.major_axis.mean) > 6.39999) {
        if((features->window_features_900.num_other_events) <= 0) {
            if((features->window_features_400.major_axis.min) <= 8.34999) { RETURN_CLASS(POINTER); /* (16.0) */ }
            if((features->window_features_400.major_axis.min) > 8.34999) { RETURN_CLASS(PALM); /* (10.0) */ }
        }
        if((features->window_features_900.num_other_events) > 0) { RETURN_CLASS(PALM); /* (9576.0/6.0) */ }
    }
    RETURN_CLASS(UNKNOWN);
}

int classify_100(const struct features *features) {
    if((features->window_features_100.major_axis.mean) <= 6.404995) {
        if((features->window_features_100.dist.min) <= 162.373027) {
            if((features->window_features_50.num_other_events) <= 2) { RETURN_CLASS(POINTER); /* (308.0/10.0) */ }
            if((features->window_features_50.num_other_events) > 2) {
                if((features->window_features_50.dist.min) <= 110.476242) { RETURN_CLASS(PALM); /* (311.0) */ }
                if((features->window_features_50.dist.min) > 110.476242) {
                    if((features->window_features_100.dist.min) <= 146.863883) { RETURN_CLASS(PALM); /* (14.0) */ }
                    if((features->window_features_100.dist.min) > 146.863883) { RETURN_CLASS(POINTER); /* (3.0) */ }
                }
            }
        }
        if((features->window_features_100.dist.min) > 162.373027) { RETURN_CLASS(POINTER); /* (1391.0/11.0) */ }
    }
    if((features->window_features_100.major_axis.mean) > 6.404995) {
        if((features->window_features_50.major_axis.mean) <= 6.63999) {
            if((features->window_features_100.dist.min) <= 268.516294) {
                if((features->window_features_100.num_other_events) <= 0) { RETURN_CLASS(POINTER); /* (11.0/1.0) */ }
                if((features->window_features_100.num_other_events) > 0) { RETURN_CLASS(PALM); /* (158.0) */ }
            }
            if((features->window_features_100.dist.min) > 268.516294) { RETURN_CLASS(POINTER); /* (9.0) */ }
        }
        if((features->window_features_50.major_axis.mean) > 6.63999) { RETURN_CLASS(PALM); /* (9951.0/7.0) */ }
    }
    RETURN_CLASS(UNKNOWN);
}

int classify_200(const struct features *features) {
    if((features->window_features_200.major_axis.mean) <= 6.414995) {
        if((features->window_features_200.dist.min) <= 147.787009) {
            if((features->window_features_200.dist.std) <= 6.470769) { RETURN_CLASS(POINTER); /* (285.0/6.0) */ }
            if((features->window_features_200.dist.std) > 6.470769) { RETURN_CLASS(PALM); /* (323.0/2.0) */ }
        }
        if((features->window_features_200.dist.min) > 147.787009) { RETURN_CLASS(POINTER); /* (1413.0/8.0) */ }
    }
    if((features->window_features_200.major_axis.mean) > 6.414995) {
        if((features->window_features_50.major_axis.mean) <= 6.569995) {
            if((features->window_features_200.dist.std) <= 8.172674) { RETURN_CLASS(POINTER); /* (13.0/1.0) */ }
            if((features->window_features_200.dist.std) > 8.172674) {
                if((features->window_features_50.dist.min) <= 166.532279) { RETURN_CLASS(PALM); /* (139.0) */ }
                if((features->window_features_50.dist.min) > 166.532279) {
                    if((features->window_features_50.major_axis.std) <= 0.009995) { RETURN_CLASS(PALM); /* (6.0) */ }
                    if((features->window_features_50.major_axis.std) > 0.009995) { RETURN_CLASS(POINTER); /* (2.0) */ }
                }
            }
        }
        if((features->window_features_50.major_axis.mean) > 6.569995) { RETURN_CLASS(PALM); /* (9975.0/7.0) */ }
    }
    RETURN_CLASS(UNKNOWN);
}
int classify_300(const struct features *features) {
    if((features->window_features_300.major_axis.mean) <= 6.39999) {
        if((features->window_features_300.accel.std) <= 0.000487) {
            if((features->window_features_200.dist.std) <= 5.180265) { RETURN_CLASS(POINTER); /* (58.0/2.0) */ }
            if((features->window_features_200.dist.std) > 5.180265) {
                if((features->window_features_200.dist.min) <= 239.718585) { RETURN_CLASS(PALM); /* (225.0) */ }
                if((features->window_features_200.dist.min) > 239.718585) { RETURN_CLASS(POINTER); /* (38.0) */ }
            }
        }
        if((features->window_features_300.accel.std) > 0.000487) {
            if((features->window_features_300.dist.min) <= 116.107709) {
                if((features->window_features_50.num_other_events) <= 2) { RETURN_CLASS(POINTER); /* (228.0/3.0) */ }
                if((features->window_features_50.num_other_events) > 2) { RETURN_CLASS(PALM); /* (79.0) */ }
            }
            if((features->window_features_300.dist.min) > 116.107709) { RETURN_CLASS(POINTER); /* (1371.0/7.0) */ }
        }
    }
    if((features->window_features_300.major_axis.mean) > 6.39999) {
        if((features->window_features_50.major_axis.mean) <= 6.569995) {
            if((features->window_features_200.dist.std) <= 8.172674) {
                if((features->window_features_300.major_axis.max) <= 7.46999) { RETURN_CLASS(POINTER); /* (16.0) */ }
                if((features->window_features_300.major_axis.max) > 7.46999) { RETURN_CLASS(PALM); /* (4.0/1.0) */ }
            }
            if((features->window_features_200.dist.std) > 8.172674) { RETURN_CLASS(PALM); /* (161.0) */ }
        }
        if((features->window_features_50.major_axis.mean) > 6.569995) { RETURN_CLASS(PALM); /* (9976.0/7.0) */ }
    }
    RETURN_CLASS(UNKNOWN);
}
int classify_400(const struct features *features) {
    if((features->window_features_400.major_axis.mean) <= 6.39999) {
        if((features->window_features_400.accel.std) <= 0.000487) {
            if((features->window_features_100.dist.std) <= 5.162305) {
                if((features->window_features_400.dist.std) <= 24.916651) { RETURN_CLASS(POINTER); /* (47.0/1.0) */ }
                if((features->window_features_400.dist.std) > 24.916651) {
                    if((features->window_features_50.major_axis.min) <= 6.06) { RETURN_CLASS(PALM); /* (2.0) */ }
                    if((features->window_features_50.major_axis.min) > 6.06) { RETURN_CLASS(POINTER); /* (3.0) */ }
                }
            }
            if((features->window_features_100.dist.std) > 5.162305) {
                if((features->window_features_400.dist.min) <= 226.2145) { RETURN_CLASS(PALM); /* (219.0) */ }
                if((features->window_features_400.dist.min) > 226.2145) { RETURN_CLASS(POINTER); /* (24.0) */ }
            }
        }
        if((features->window_features_400.accel.std) > 0.000487) {
            if((features->window_features_400.dist.min) <= 90) {
                if((features->window_features_50.num_other_events) <= 1) { RETURN_CLASS(POINTER); /* (229.0/3.0) */ }
                if((features->window_features_50.num_other_events) > 1) { RETURN_CLASS(PALM); /* (80.0) */ }
            }
            if((features->window_features_400.dist.min) > 90) { RETURN_CLASS(POINTER); /* (1394.0/9.0) */ }
        }
    }
    if((features->window_features_400.major_axis.mean) > 6.39999) {
        if((features->window_features_400.num_other_events) <= 0) {
            if((features->window_features_300.major_axis.max) <= 8.10999) { RETURN_CLASS(POINTER); /* (18.0/1.0) */ }
            if((features->window_features_300.major_axis.max) > 8.10999) { RETURN_CLASS(PALM); /* (125.0) */ }
        }
        if((features->window_features_400.num_other_events) > 0) { RETURN_CLASS(PALM); /* (10015.0/6.0) */ }
    }
    RETURN_CLASS(UNKNOWN);
}
int classify_50(const struct features *features) {
    if((features->window_features_50.major_axis.mean) <= 6.469995) {
        if((features->window_features_50.dist.min) <= 193.214906) {
            if((features->window_features_50.dist.std) <= 2.132406) {
                if((features->window_features_50.num_other_events) <= 0) { RETURN_CLASS(POINTER); /* (349.0/9.0) */ }
                if((features->window_features_50.num_other_events) > 0) {
                    if((features->window_features_50.dist.mean) <= 152.806015) { RETURN_CLASS(PALM); /* (7.0) */ }
                    if((features->window_features_50.dist.mean) > 152.806015) { RETURN_CLASS(POINTER); /* (19.0) */ }
                }
            }
            if((features->window_features_50.dist.std) > 2.132406) {
                if((features->window_features_50.dist.min) <= 124.02016) { RETURN_CLASS(PALM); /* (386.0) */ }
                if((features->window_features_50.dist.min) > 124.02016) {
                    if((features->window_features_50.major_axis.mean) <= 5.76499) { RETURN_CLASS(POINTER); /* (7.0/2.0) */ }
                    if((features->window_features_50.major_axis.mean) > 5.76499) {
                        if((features->window_features_50.dist.std) <= 50.272625) { RETURN_CLASS(POINTER); /* (2.0) */ }
                        if((features->window_features_50.dist.std) > 50.272625) { RETURN_CLASS(PALM); /* (12.0) */ }
                    }
                }
            }
        }
        if((features->window_features_50.dist.min) > 193.214906) { RETURN_CLASS(POINTER); /* (1334.0/11.0) */ }
    }
    if((features->window_features_50.major_axis.mean) > 6.469995) {
        if((features->window_features_50.major_axis.mean) <= 6.63999) {
            if((features->window_features_50.dist.min) <= 255.280238) {
                if((features->window_features_50.num_other_events) <= 0) {
                    if((features->window_features_50.major_axis.min) <= 6.48999) { RETURN_CLASS(PALM); /* (4.0/1.0) */ }
                    if((features->window_features_50.major_axis.min) > 6.48999) { RETURN_CLASS(POINTER); /* (3.0) */ }
                }
                if((features->window_features_50.num_other_events) > 0) { RETURN_CLASS(PALM); /* (72.0) */ }
            }
            if((features->window_features_50.dist.min) > 255.280238) { RETURN_CLASS(POINTER); /* (7.0) */ }
        }
        if((features->window_features_50.major_axis.mean) > 6.63999) { RETURN_CLASS(PALM); /* (9954.0/7.0) */ }
    }
    RETURN_CLASS(UNKNOWN);
}
int classify_500(const struct features *features) {
    if((features->window_features_500.major_axis.mean) <= 6.400618) {
        if((features->window_features_500.accel.std) <= 0.000516) {
            if((features->window_features_500.dist.std) <= 19.547971) {
                if((features->window_features_200.major_axis.min) <= 6.09999) { RETURN_CLASS(POINTER); /* (36.0) */ }
                if((features->window_features_200.major_axis.min) > 6.09999) {
                    if((features->window_features_200.major_axis.mean) <= 6.254995) { RETURN_CLASS(PALM); /* (2.0) */ }
                    if((features->window_features_200.major_axis.mean) > 6.254995) { RETURN_CLASS(POINTER); /* (5.0) */ }
                }
            }
            if((features->window_features_500.dist.std) > 19.547971) {
                if((features->window_features_400.dist.min) <= 209.773688) { RETURN_CLASS(PALM); /* (220.0) */ }
                if((features->window_features_400.dist.min) > 209.773688) { RETURN_CLASS(POINTER); /* (21.0) */ }
            }
        }
        if((features->window_features_500.accel.std) > 0.000516) {
            if((features->window_features_500.dist.min) <= 90) {
                if((features->window_features_50.num_other_events) <= 1) { RETURN_CLASS(POINTER); /* (234.0/3.0) */ }
                if((features->window_features_50.num_other_events) > 1) { RETURN_CLASS(PALM); /* (79.0) */ }
            }
            if((features->window_features_500.dist.min) > 90) { RETURN_CLASS(POINTER); /* (1399.0/8.0) */ }
        }
    }
    if((features->window_features_500.major_axis.mean) > 6.400618) {
        if((features->window_features_500.num_other_events) <= 0) {
            if((features->window_features_200.major_axis.max) <= 8.10999) { RETURN_CLASS(POINTER); /* (17.0) */ }
            if((features->window_features_200.major_axis.max) > 8.10999) { RETURN_CLASS(PALM); /* (63.0) */ }
        }
        if((features->window_features_500.num_other_events) > 0) { RETURN_CLASS(PALM); /* (10080.0/6.0) */ }
    }
    RETURN_CLASS(UNKNOWN);
}
int classify_600(const struct features *features) {
    if((features->window_features_500.major_axis.mean) <= 6.400618) {
        if((features->window_features_500.accel.std) <= 0.000516) {
            if((features->window_features_500.dist.std) <= 19.547971) {
                if((features->window_features_200.major_axis.min) <= 6.09999) { RETURN_CLASS(POINTER); /* (36.0) */ }
                if((features->window_features_200.major_axis.min) > 6.09999) {
                    if((features->window_features_200.major_axis.mean) <= 6.254995) { RETURN_CLASS(PALM); /* (2.0) */ }
                    if((features->window_features_200.major_axis.mean) > 6.254995) { RETURN_CLASS(POINTER); /* (5.0) */ }
                }
            }
            if((features->window_features_500.dist.std) > 19.547971) {
                if((features->window_features_600.dist.min) <= 199.421664) { RETURN_CLASS(PALM); /* (220.0) */ }
                if((features->window_features_600.dist.min) > 199.421664) { RETURN_CLASS(POINTER); /* (21.0) */ }
            }
        }
        if((features->window_features_500.accel.std) > 0.000516) {
            if((features->window_features_600.dist.min) <= 89.88882) {
                if((features->window_features_50.num_other_events) <= 1) {
                    if((features->window_features_600.num_events) <= 5) {
                        if((features->window_features_50.major_axis.mean) <= 5.11499) { RETURN_CLASS(PALM); /* (2.0) */ }
                        if((features->window_features_50.major_axis.mean) > 5.11499) { RETURN_CLASS(POINTER); /* (11.0) */ }
                    }
                    if((features->window_features_600.num_events) > 5) { RETURN_CLASS(POINTER); /* (221.0/1.0) */ }
                }
                if((features->window_features_50.num_other_events) > 1) { RETURN_CLASS(PALM); /* (79.0) */ }
            }
            if((features->window_features_600.dist.min) > 89.88882) { RETURN_CLASS(POINTER); /* (1399.0/8.0) */ }
        }
    }
    if((features->window_features_500.major_axis.mean) > 6.400618) {
        if((features->window_features_600.num_other_events) <= 0) {
            if((features->window_features_50.major_axis.max) <= 7.87999) { RETURN_CLASS(POINTER); /* (17.0) */ }
            if((features->window_features_50.major_axis.max) > 7.87999) { RETURN_CLASS(PALM); /* (40.0) */ }
        }
        if((features->window_features_600.num_other_events) > 0) { RETURN_CLASS(PALM); /* (10103.0/6.0) */ }
    }
    RETURN_CLASS(UNKNOWN);
}
int classify_700(const struct features *features) {
    if((features->window_features_500.major_axis.mean) <= 6.400618) {
        if((features->window_features_700.accel.std) <= 0.000516) {
            if((features->window_features_500.dist.std) <= 19.547971) {
                if((features->window_features_200.major_axis.min) <= 6.09999) { RETURN_CLASS(POINTER); /* (34.0) */ }
                if((features->window_features_200.major_axis.min) > 6.09999) {
                    if((features->window_features_200.major_axis.mean) <= 6.254995) { RETURN_CLASS(PALM); /* (2.0) */ }
                    if((features->window_features_200.major_axis.mean) > 6.254995) { RETURN_CLASS(POINTER); /* (5.0) */ }
                }
            }
            if((features->window_features_500.dist.std) > 19.547971) {
                if((features->window_features_700.dist.min) <= 194.126248) { RETURN_CLASS(PALM); /* (220.0) */ }
                if((features->window_features_700.dist.min) > 194.126248) { RETURN_CLASS(POINTER); /* (20.0) */ }
            }
        }
        if((features->window_features_700.accel.std) > 0.000516) {
            if((features->window_features_600.dist.min) <= 89.88882) {
                if((features->window_features_50.num_other_events) <= 1) { RETURN_CLASS(POINTER); /* (235.0/3.0) */ }
                if((features->window_features_50.num_other_events) > 1) { RETURN_CLASS(PALM); /* (79.0) */ }
            }
            if((features->window_features_600.dist.min) > 89.88882) { RETURN_CLASS(POINTER); /* (1401.0/8.0) */ }
        }
    }
    if((features->window_features_500.major_axis.mean) > 6.400618) {
        if((features->window_features_700.num_other_events) <= 0) {
            if((features->window_features_400.major_axis.min) <= 8.23) { RETURN_CLASS(POINTER); /* (17.0) */ }
            if((features->window_features_400.major_axis.min) > 8.23) { RETURN_CLASS(PALM); /* (24.0) */ }
        }
        if((features->window_features_700.num_other_events) > 0) { RETURN_CLASS(PALM); /* (10119.0/6.0) */ }
    }
    RETURN_CLASS(UNKNOWN);
}
int classify_800(const struct features *features) {
    if((features->window_features_500.major_axis.mean) <= 6.400618) {
        if((features->window_features_700.accel.std) <= 0.000516) {
            if((features->window_features_800.dist.std) <= 50.062134) {
                if((features->window_features_50.dist.std) <= 3.119) { RETURN_CLASS(POINTER); /* (40.0/1.0) */ }
                if((features->window_features_50.dist.std) > 3.119) {
                    if((features->window_features_50.num_other_events) <= 4) { RETURN_CLASS(PALM); /* (2.0) */ }
                    if((features->window_features_50.num_other_events) > 4) { RETURN_CLASS(POINTER); /* (5.0) */ }
                }
            }
            if((features->window_features_800.dist.std) > 50.062134) {
                if((features->window_features_800.dist.min) <= 180.867355) { RETURN_CLASS(PALM); /* (219.0) */ }
                if((features->window_features_800.dist.min) > 180.867355) { RETURN_CLASS(POINTER); /* (15.0) */ }
            }
        }
        if((features->window_features_700.accel.std) > 0.000516) {
            if((features->window_features_600.dist.min) <= 89.88882) {
                if((features->window_features_50.num_other_events) <= 1) { RETURN_CLASS(POINTER); /* (235.0/3.0) */ }
                if((features->window_features_50.num_other_events) > 1) { RETURN_CLASS(PALM); /* (79.0) */ }
            }
            if((features->window_features_600.dist.min) > 89.88882) { RETURN_CLASS(POINTER); /* (1401.0/8.0) */ }
        }
    }
    if((features->window_features_500.major_axis.mean) > 6.400618) {
        if((features->window_features_800.num_other_events) <= 0) {
            if((features->window_features_400.major_axis.min) <= 8.23) { RETURN_CLASS(POINTER); /* (17.0) */ }
            if((features->window_features_400.major_axis.min) > 8.23) { RETURN_CLASS(PALM); /* (15.0) */ }
        }
        if((features->window_features_800.num_other_events) > 0) { RETURN_CLASS(PALM); /* (10128.0/6.0) */ }
    }
    RETURN_CLASS(UNKNOWN);
}
int classify_900(const struct features *features) {
    if((features->window_features_900.major_axis.mean) <= 6.39999) {
        if((features->window_features_900.accel.std) <= 0.000516) {
            if((features->window_features_800.dist.std) <= 50.062134) {
                if((features->window_features_50.dist.std) <= 3.119) { RETURN_CLASS(POINTER); /* (38.0/1.0) */ }
                if((features->window_features_50.dist.std) > 3.119) {
                    if((features->window_features_50.num_other_events) <= 4) { RETURN_CLASS(PALM); /* (2.0) */ }
                    if((features->window_features_50.num_other_events) > 4) { RETURN_CLASS(POINTER); /* (5.0) */ }
                }
            }
            if((features->window_features_800.dist.std) > 50.062134) {
                if((features->window_features_800.dist.min) <= 180.867355) { RETURN_CLASS(PALM); /* (217.0) */ }
                if((features->window_features_800.dist.min) > 180.867355) { RETURN_CLASS(POINTER); /* (14.0) */ }
            }
        }
        if((features->window_features_900.accel.std) > 0.000516) {
            if((features->window_features_500.major_axis.std) <= 0.323218) {
                if((features->window_features_900.dist.min) <= 83.737686) {
                    if((features->window_features_50.num_other_events) <= 1) {
                        if((features->window_features_800.num_events) <= 5) {
                            if((features->window_features_50.major_axis.mean) <= 5.11499) { RETURN_CLASS(PALM); /* (2.0) */ }
                            if((features->window_features_50.major_axis.mean) > 5.11499) { RETURN_CLASS(POINTER); /* (12.0) */ }
                        }
                        if((features->window_features_800.num_events) > 5) { RETURN_CLASS(POINTER); /* (222.0/1.0) */ }
                    }
                    if((features->window_features_50.num_other_events) > 1) { RETURN_CLASS(PALM); /* (61.0) */ }
                }
                if((features->window_features_900.dist.min) > 83.737686) { RETURN_CLASS(POINTER); /* (1393.0/5.0) */ }
            }
            if((features->window_features_500.major_axis.std) > 0.323218) {
                if((features->window_features_50.dist.mean) <= 335.078328) { RETURN_CLASS(PALM); /* (23.0/1.0) */ }
                if((features->window_features_50.dist.mean) > 335.078328) { RETURN_CLASS(POINTER); /* (6.0) */ }
            }
        }
    }
    if((features->window_features_900.major_axis.mean) > 6.39999) {
        if((features->window_features_900.num_other_events) <= 0) {
            if((features->window_features_400.major_axis.min) <= 8.34999) { RETURN_CLASS(POINTER); /* (16.0) */ }
            if((features->window_features_400.major_axis.min) > 8.34999) { RETURN_CLASS(PALM); /* (10.0) */ }
        }
        if((features->window_features_900.num_other_events) > 0) {
            if((features->window_features_100.major_axis.max) <= 6.35999) {
                if((features->window_features_200.dist.min) <= 140.602276) { RETURN_CLASS(PALM); /* (29.0) */ }
                if((features->window_features_200.dist.min) > 140.602276) { RETURN_CLASS(POINTER); /* (3.0) */ }
            }
            if((features->window_features_100.major_axis.max) > 6.35999) { RETURN_CLASS(PALM); /* (10103.0/4.0) */ }
        }
    }
    RETURN_CLASS(UNKNOWN);
}
